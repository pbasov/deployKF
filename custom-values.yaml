##
##
## This file is intended to be a base for your deployKF values.
## You may either copy and modify it, or include it as a base before your own overrides.
## For an example of overrides, see the 'sample-values-overrides.yaml' in the main repo.
##
## Differences from 'default_values.yaml':
##  - all tools are enabled
##  - secrets are randomly generated at install
##
## Notes:
##  - YAML maps are RECURSIVELY merged across values files
##  - YAML lists are REPLACED in their entirety across values files
##  - Do NOT include empty/null sections, as this will remove ALL values from that section.
##    To include a section without overriding any values, set it to an empty map: `{}`
##  - We don't show all sections/values, only those which are commonly overridden.
##    The full list is available at https://www.deploykf.org/reference/deploykf-values/
##
##

## --------------------------------------------------------------------------------
##
##                                      argocd
##
## --------------------------------------------------------------------------------
argocd:

  ## a prefix to use for argocd application names
  ##  - allows a single instance of argocd to manage deployKF across multiple clusters
  ##  - if non-empty, `argocd.destination` must be a remote cluster, this is because
  ##    a single cluster can only have one instance of deployKF
  ##
  appNamePrefix: ""

  ## the namespace in which argocd is deployed
  ##
  namespace: argocd

  ## the project used for deployKF argocd applications
  ##
  project: default

  ## the source used for deployKF argocd applications
  ##
  source:

    ## configs specifying the git repo which contains your generated manifests
    ##
    repo:
      ## the URL of your manifest git repo
      ##  - for example, if you are using a GitHub repo named 'deployKF/examples', you might set this value
      ##    to "https://github.com/deployKF/examples" or "git@github.com:deployKF/examples.git"
      ##
      url: "git@github.com:pbasov/deploykf-cz.git"

      ## the git revision which contains your generated manifests
      ##  - for example, if you are using the 'main' branch of your repo, you might set this value to "main"
      ##
      revision: "main"

      ## the path within your repo where the generated manifests are stored
      ##  - for example, if you are using a folder named 'GENERATOR_OUTPUT' at the root of your repo,
      ##    you might set this value to "./GENERATOR_OUTPUT/"
      ##
      path: "./definitions/"

  ## the destination used for deployKF argocd applications
  ##  - the value of `destination.name` takes precedence over `destination.server`
  ##
  destination:
    server: https://kubernetes.default.svc
    name: ""


## --------------------------------------------------------------------------------
##                                    kubernetes
## --------------------------------------------------------------------------------
kubernetes:
  {} # <-- REMOVE THIS, IF YOU INCLUDE VALUES UNDER THIS SECTION!

## --------------------------------------------------------------------------------
##                              deploykf-dependencies
## --------------------------------------------------------------------------------
deploykf_dependencies:
  cert_manager:
    enabled: true
    clusterIssuer:
      enabled: false 
      issuerName: letsencrypt-prod
    extraManifests:
      - |
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt-prod
        spec:
          acme:
            server: https://acme-v02.api.letsencrypt.org/directory
            email: mail@weystrom.net
            privateKeySecretRef:
              name: letsencrypt-prod
            solvers:
            - dns01:
                cloudflare:
                  email: mail@weystrom.net 
                  apiTokenSecretRef:
                    name: cloudflare-api-token-secret 
                    key: api-token
  ## --------------------------------------
  ##                 istio
  ## --------------------------------------
  istio:
    enabled: true
    namespace: istio-system

  ## --------------------------------------
  ##                kyverno
  ## --------------------------------------
  kyverno:
    enabled: true
    namespace: kyverno

## --------------------------------------------------------------------------------
##                                  deploykf-core
## --------------------------------------------------------------------------------
deploykf_core:

  ## --------------------------------------
  ##             deploykf-auth
  ## --------------------------------------
  deploykf_auth:
    dex:
      staticPasswords:
      - email: "admin@mirantis.com"
  ## --------------------------------------
  ##        deploykf-istio-gateway
  ## --------------------------------------
  deploykf_istio_gateway:
    enabled: true
    is_self_signed_cert: false
    gateway:
      is_self_signed_cert: false
      hostname: kf.cz03.weystrom.net
      ports:
        http: 80
        https: 443
    gatewayService:
      type: ClusterIP
    valuesOverrides:
      gateway:
        service:
          externalIPs: ["5.43.224.8"]
  ## --------------------------------------
  ##      deploykf-profiles-generator
  ## --------------------------------------
  deploykf_profiles_generator:
    users:
      - id: admin
        email: "admin@mirantis.com"
    groups:
      - id: mirantis-ml-team
        users:
        - admin
    profiles:
      - name: mirantis-ml-profile
        members:
          - group: mirantis-ml-team
            access:
              role: edit
              notebooksAccess: true
## --------------------------------------------------------------------------------
##                                   deploykf-opt
## --------------------------------------------------------------------------------
deploykf_opt:
  ## --------------------------------------
  ##            deploykf-minio
  ## --------------------------------------
  deploykf_minio:
    enabled: true
    persistence:
      size: 150G

  ## --------------------------------------
  ##            deploykf-mysql
  ## --------------------------------------
  deploykf_mysql:
    enabled: true
    namespace: deploykf-mysql

    ## configs for the "root@localhost" mysql user
    ##  - these credentials are used by the liveness probes
    ##  - as this is "root@localhost", these credentials can only be used from within the pod
    ##
    rootUser:
      existingSecret: "generated--deploykf-mysql-root-user"
      existingSecretPasswordKey: "password"
      generateSecret: true

    ## configs for the kubeflow mysql user
    ##  - if a Kubeflow app requires MySQL and is not configured to use an external database,
    ##    it will use these credentials
    ##
    kubeflowUser:
      existingSecret: "generated--deploykf-mysql-kubeflow-user"
      existingSecretUsernameKey: "username"
      existingSecretPasswordKey: "password"
      generateSecret: true

## --------------------------------------------------------------------------------
##
##                              kubeflow-dependencies
##
## --------------------------------------------------------------------------------
kubeflow_dependencies:

  ## --------------------------------------
  ##        kubeflow-argo-workflows
  ## --------------------------------------
  kubeflow_argo_workflows:
    enabled: true
    namespace: kubeflow-argo-workflows

## --------------------------------------------------------------------------------
##                                  kubeflow-tools
## --------------------------------------------------------------------------------
kubeflow_tools:

  ## --------------------------------------
  ##                 katib
  ## --------------------------------------
  katib:
    enabled: true

    ## mysql connection configs
    ##  - if `useExternal` is true, katib will use the specified external mysql database
    ##  - if `useExternal` is false, katib will use the embedded `deploykf_opt.deploykf_mysql` database,
    ##    and all other configs will be ignored
    ##
    mysql:
      useExternal: false
      host: "mysql.example.com"
      port: 3306
      auth:
        username: kubeflow
        password: password
        existingSecret: ""
        existingSecretUsernameKey: "username"
        existingSecretPasswordKey: "password"
    ## mysql database name
    ##
    mysqlDatabase: katib

  ## --------------------------------------
  ##               notebooks
  ## --------------------------------------
  notebooks:
    enabled: true
    spawnerFormDefaults:
      cpu:
        readOnly: false
        ## the default cpu request for the container
        value: "0.5"
        ## a factor by which to multiply the CPU request calculate the cpu limit
        ## (to disable cpu limits, set as "none")
        limitFactor: "none" 
      memory:
        readOnly: false
        ## the default memory request for the container
        value: "1.0Gi"
        ## a factor by which to multiply the memory request calculate the memory limit
        ## (to disable memory limits, set as "none")
        limitFactor: "none" 
      gpus:
        value:
          vendor: "nvidia.com/gpu"
          vendors:
            - limitsKey: "nvidia.com/gpu"
              uiName: "NVIDIA"
          num: "0"
  ## --------------------------------------
  ##               pipelines
  ## --------------------------------------
  pipelines:
    enabled: true
    images:
      kfpCacheServer:
        repository: gcr.io/ml-pipeline/cache-server
        tag: 2.0.0
      kfpMetadataEnvoy:
        repository: gcr.io/ml-pipeline/metadata-envoy
        tag: 2.0.0
      kfpMetadataWriter:
        repository: gcr.io/ml-pipeline/metadata-writer
        tag: 2.0.0
      kfpApiServer:
        repository: gcr.io/ml-pipeline/api-server
        tag: 2.0.0
      kfpPersistenceagent:
        repository: gcr.io/ml-pipeline/persistenceagent
        tag: 2.0.0
      kfpScheduledworkflow:
        repository: gcr.io/ml-pipeline/scheduledworkflow
        tag: 2.0.0
      kfpFrontend:
        repository: gcr.io/ml-pipeline/frontend
        tag: 2.0.0
      kfpViewerCrdController:
        repository: gcr.io/ml-pipeline/viewer-crd-controller
        tag: 2.0.0
      kfpVisualizationServer:
        repository: gcr.io/ml-pipeline/visualization-server
        tag: 2.0.0
    kfpV2:
      profileResourceGeneration:
        kfpApiTokenPodDefault: true
      minioFix: true


  ## --------------------------------------
  ##          poddefaults-webhook
  ## --------------------------------------
  poddefaults_webhook:
    enabled: true


  ## --------------------------------------
  ##             tensorboards
  ## --------------------------------------
  tensorboards:
    enabled: true


  ## --------------------------------------
  ##           training-operator
  ## --------------------------------------
  training_operator:
    enabled: true


  ## --------------------------------------
  ##                volumes
  ## --------------------------------------
  volumes:
    enabled: true

  kserve:
    enabled: true
    namespace: kserve

extra_tools:
  open_webui:
    enabled: true
    namespace: openwebui
  nvdp:
    enabled: true